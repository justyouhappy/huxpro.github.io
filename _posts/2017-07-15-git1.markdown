---
layout:     post
title:      "git 基础使用总结（1）--基础应用"
subtitle:   "git 基础"
date:       2017-07-15
author:     "Alan"
header-img: "img/post-bg-rwd.jpg"
catalog: true
tags:
    - 技术
    - git
---

> live like youself. 

# 写在前面

git和github并不能混为一谈

1.git 可以在 .git 文件夹里面维护你的历史代码

2.github是用Git做版本控制的代码托管平台，每家公司或者包括你自己都可以有一个自己的代码托管平台

3.使用代码托管平台时，需要上传本地的公钥

[具体教程](https://git-scm.com/book/zh/v2/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84-Git-%E7%94%9F%E6%88%90-SSH-%E5%85%AC%E9%92%A5)
使用git前应输入此命令配置

```
git config --global user.name “你的账号用户名"
git config --global user.email 账号邮箱

```

---

## 开始学习git入门

### 1.Git 仓库的获取

   对本地项目使用    git仓库管理git init

   克隆现有项目    git clone 项目地址 [本地仓库名称]

### 2.检查当前文件状态 

   git status    可以看到未跟踪的文件和修改后未提交的跟踪文件

### 3.跟踪新文件和暂存已修改文件

   git add 此文件地址

### 4.忽略文件

   一般我们创建一个.gitignore 的文件，列出我们希望忽略的文件，支持glob模式，如*.[oa],忽略结尾为.o或者为.a的文件

   文件 .gitignore 的格式规范如下：

    所有空行或者以 ＃ 开头的行都会被 Git 忽略。

    可以使用标准的 glob 模式匹配。

    匹配模式可以以（/）开头防止递归。

    匹配模式可以以（/）结尾指定目录。

    要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。

要注意的是: 

```
    1.所谓的 glob 模式是指 shell 所使用的简化了的正则表达式。 
    2.星号（*）匹配零个或多个任意字符，例：[abc]匹配任何一个列在方括号中的字符（这
      个例子要么匹配一个 a，要么匹配一个 b，要么匹配一个 c）；
    3.问号（?）只匹配一个任意字符；
    4.如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配（比如 [0-9] 表示匹配所有 0 到 9 的数字）。
    5. 使用两个星号（*) 表示匹配任意中间目录，比如：
    `a/**/z` 可以匹配 a/z, a/b/z 或 `a/b/c/z`等。

```
### 5.查看已暂存和未暂存的修改

   git diff 可以查看尚未暂存的文件更新了哪些部分

   git diff —cached 查看已暂存的将要添加到下次提交里的内容

### 6.提交更新

   git commit -m '提交信息’

   git commit —amend 有时候我们提交完了才发现漏掉了几个文件没有添加，或者提交信息写错了。 此时，可以运行此命令尝试重新提交

### 7.移除文件

   git rm 文件路径 从暂存区域移除此文件

   用 git rm 命令完成此项工作，并连带从工作目录中删除指定的文件，这样以后就不会出现在未跟踪文件清单中了。

   git rm —cached 文件路径，此命令只在暂存区移除，而本地保留

### 8.查看提交历史

   git log 可以查看提交历史

### 9.取消暂存文件

   git reset HEAD 文件地址 可以将我们不小心多暂存的文件取消暂存

### 10.撤销对文件的修改

    git checkout —文件路径，撤销了对此文件的修改

### 11.拉取远程仓库和所有分支

    git fetch 远程仓库地址，此命令会将远程你未有的数据拉下来，并拥有所有分支引用

### 12.拉取当前分支远程分支的变化

    git pull

[参考地址](https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%8E%B7%E5%8F%96-Git-%E4%BB%93%E5%BA%93)

